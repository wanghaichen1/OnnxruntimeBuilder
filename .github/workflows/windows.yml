name: windows

on:
  workflow_dispatch:

jobs:
  windows:
    strategy:
      fail-fast: false
      matrix:
        ver:
          - { onnx: v1.18.1, python: 3.8.10, jdk: 11, gradle: 8.6 }
        list:
          - { win_ver: 2022, vs_name: vs2022, vs_ver: v142, vs_path: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise' }
        arch:
          [
            x64,
            x86,
          ]
        crt:
          [
            md,
            mt,
          ]

    runs-on: windows-${{ matrix.list.win_ver }}

    name: windows-${{ matrix.list.vs_name }}-${{ matrix.arch }}-${{ matrix.crt }}

    env:
      BUILD_SCRIPT: build-onnxruntime-win.ps1
      SHARED_PKG_NAME: onnxruntime-${{ matrix.ver.onnx }}-windows-${{ matrix.list.vs_name }}-${{ matrix.arch }}-shared-${{ matrix.crt }}
      STATIC_PKG_NAME: onnxruntime-${{ matrix.ver.onnx }}-windows-${{ matrix.list.vs_name }}-${{ matrix.arch }}-static-${{ matrix.crt }}
      JAVA_PKG_NAME: onnxruntime-${{ matrix.ver.onnx }}-windows-${{ matrix.list.vs_name }}-java-${{ matrix.arch }}-${{ matrix.crt }}

    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '${{ matrix.ver.python }}'

      # 检出代码
      - uses: actions/checkout@v4

      # 检出onnxruntime
      - name: checkout onnxruntime
        uses: actions/checkout@v4
        with:
          repository: microsoft/onnxruntime
          path: onnxruntime-${{ matrix.ver.onnx }}
          ref: ${{ matrix.ver.onnx }}
          submodules: recursive

      # 复制
      - name: copy
        run: |
          cp ${{ env.BUILD_SCRIPT }} onnxruntime-${{ matrix.ver.onnx }}
          cp Launch-VsDevShell.ps1 onnxruntime-${{ matrix.ver.onnx }}

      - name: build
        shell: powershell
        run: |
          
          wget https://storage.openvinotoolkit.org/repositories/openvino/packages/2024.4/windows/w_openvino_toolkit_windows_2024.4.0.16579.c3152d32c9c_x86_64.zip -O openvino.zip
          Expand-Archive -Path openvino.zip -DestinationPath .\
          $env:INTEL_OPENVINO_DIR = "$PWD\\w_openvino_toolkit_windows_2024.4.0.16579.c3152d32c9c_x86_64\\"
          
          $INTEL_OPENVINO_DIR\setupvars.ps1

          cd onnxruntime-${{ matrix.ver.onnx }}
          if ("${{ matrix.arch }}" -eq "x64" )
          {
            & '.\Launch-VsDevShell.ps1' -VsInstallationPath '${{ matrix.list.vs_path }}' -SkipAutomaticLocation -HostArch amd64 -Arch amd64  
          }
          else
          {
            & '.\Launch-VsDevShell.ps1' -VsInstallationPath '${{ matrix.list.vs_path }}' -SkipAutomaticLocation -HostArch amd64 -Arch ${{ matrix.arch }}
          }
          .\${{ env.BUILD_SCRIPT }} -VsArch ${{ matrix.arch }} -VsVer ${{ matrix.list.vs_ver }} -VsCRT ${{ matrix.crt }} 
          
          cp $INTEL_OPENVINO_DIR\runtime\bin\intel64\Release\openvino.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install\lib\
          cp $INTEL_OPENVINO_DIR\runtime\bin\intel64\Release\openvino_c.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install\lib\
          cp $INTEL_OPENVINO_DIR\runtime\bin\intel64\Release\openvino_intel_cpu_plugin.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install\lib\
          cp $INTEL_OPENVINO_DIR\runtime\bin\intel64\Release\openvino_intel_gpu_plugin.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install\lib\
          cp $INTEL_OPENVINO_DIR\runtime\bin\intel64\Release\openvino_onnx_frontend.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install\lib\
          cp $INTEL_OPENVINO_DIR\runtime\bin\intel64\Release\openvino_auto_plugin.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install\lib\
          cp $INTEL_OPENVINO_DIR\runtime\bin\intel64\Release\openvino_auto_batch_plugin.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install\lib\
          cp $INTEL_OPENVINO_DIR\runtime\bin\intel64\Release\openvino_ir_frontend.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install\lib\
          cp $INTEL_OPENVINO_DIR\runtime\bin\intel64\Release\openvino_hetero_plugin.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install\lib\
          cp $INTEL_OPENVINO_DIR\runtime\3rdparty\tbb\bin\tbb12.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install\lib\
          cp $INTEL_OPENVINO_DIR\runtime\3rdparty\tbb\bin\tbbmalloc.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install\lib\
          cp $INTEL_OPENVINO_DIR\runtime\3rdparty\tbb\bin\tbbmalloc_proxy.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install\lib\
          cp $INTEL_OPENVINO_DIR\runtime\3rdparty\tbb\bin\tbbbind_2_5.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install\lib\

          cp $INTEL_OPENVINO_DIR\runtime\bin\intel64\Release\openvino.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install-static\lib\
          cp $INTEL_OPENVINO_DIR\runtime\bin\intel64\Release\openvino_c.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install-static\lib\
          cp $INTEL_OPENVINO_DIR\runtime\bin\intel64\Release\openvino_intel_cpu_plugin.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install-static\lib\
          cp $INTEL_OPENVINO_DIR\runtime\bin\intel64\Release\openvino_intel_gpu_plugin.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install-static\lib\
          cp $INTEL_OPENVINO_DIR\runtime\bin\intel64\Release\openvino_onnx_frontend.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install-static\lib\
          cp $INTEL_OPENVINO_DIR\runtime\bin\intel64\Release\openvino_auto_plugin.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install-static\lib\
          cp $INTEL_OPENVINO_DIR\runtime\bin\intel64\Release\openvino_auto_batch_plugin.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install-static\lib\
          cp $INTEL_OPENVINO_DIR\runtime\bin\intel64\Release\openvino_ir_frontend.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install-static\lib\
          cp $INTEL_OPENVINO_DIR\runtime\bin\intel64\Release\openvino_hetero_plugin.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install-static\lib\
          cp $INTEL_OPENVINO_DIR\runtime\3rdparty\tbb\bin\tbb12.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install-static\lib\
          cp $INTEL_OPENVINO_DIR\runtime\3rdparty\tbb\bin\tbbmalloc.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install-static\lib\
          cp $INTEL_OPENVINO_DIR\runtime\3rdparty\tbb\bin\tbbmalloc_proxy.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install-static\lib\
          cp $INTEL_OPENVINO_DIR\runtime\3rdparty\tbb\bin\tbbbind_2_5.dll build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}\Release\install-static\lib\

      # install文件夹改名，并使用7z压缩
      - name: 7zip pack shared libs
        run: |
          cp -r onnxruntime-${{ matrix.ver.onnx }}/build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}/Release/install ${{ env.SHARED_PKG_NAME }}
          7z a ${{ env.SHARED_PKG_NAME }}.7z ${{ env.SHARED_PKG_NAME }}
          rm ${{ env.SHARED_PKG_NAME }} -r -fo

      - name: 7zip pack static libs
        run: |
          cp -r onnxruntime-${{ matrix.ver.onnx }}/build-${{ matrix.arch }}-${{ matrix.list.vs_ver }}-${{ matrix.crt }}/Release/install-static ${{ env.STATIC_PKG_NAME }}
          7z a ${{ env.STATIC_PKG_NAME }}.7z ${{ env.STATIC_PKG_NAME }}
          rm ${{ env.STATIC_PKG_NAME }} -r -fo

      # 创建release 上传release
      # https://github.com/marketplace/actions/create-release
      - name: upload-windows
        uses: ncipollo/release-action@v1
        with:
          prerelease: false
          bodyFile: release.md
          artifacts: artifacts/*/*.7z
          allowUpdates: true
          artifactContentType: application/x-7z-compressed
          token: ${{ secrets.GITHUB_TOKEN }}
